grammar org.xtext.globalTypes.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/globalTypes/MyDsl"

Model:
	protocol = GlobalProtocol | protocol = LocalProtocol
;

GlobalProtocol:
	'global' 'protocol' protocolName=ID '(' roles=Roles '){'protocol=Protocol'}'
	;
	
Roles:
	roles+=Role (',' roles+=Role)*
;

Role:
	RoleOne | RoleSet
;

RoleOne:
	'role' name=ID
;

RoleSet:
	'roleset' name=ID ':' ref=[RoleOne | ID]
;
    

Protocol:
	{Protocol} (actions+=(Message | Choice | Recursion | ForEach | CloseRecursion))*
;

Recursion:
	'rec' name=ID ':'
;

CloseRecursion:
	'loop' recursionVariable=[Recursion | ID] ';'
;

ForEach: // add ref

	'foreach' eachRole=RoleOne ':' role=[RoleSet | ID] '{'
		branch=Protocol
	'}'
;

Choice:
	'choice' 'at' role=[RoleOne | ID] '{'
		message+=Message
		branches+=Protocol
	'}' ('or' '{'
		message+=Message
		branches+=Protocol
	'}')*
;

Message:
	messageType=MessageType '(' payload=Payload? ')' 'from' sender=[RoleOne | ID] 'to' receiver=[RoleOne | ID] ';'
;

Payload:
	{Payload} (types+=Type (','types+=Type)*) | types+=ID
;

LocalProtocol:
	'local' 'protocol' protocolName=ID 'at' (projectedRole=ID | projectedRole=ID) '(' roles=RolesL ')' '{'protocol=ProtocolL'}'
;

RolesL:
	roles+=RoleL (',' roles+=RoleL)*
;

RoleL:
	RoleOneL | RoleSetL
;


RoleOneL:
	'role' name=ID
;

RoleSetL:
	'roleset' name=ID ':' ref=[RoleOneL | ID]
;

ProtocolL:
	{ProtocolL} (actions+=(MessageL | ChoiceL | ForEachL | Recursion | CloseRecursion))*
;

MessageL:
	messageType=ID '(' payload=Payload? ')' (target+=SenderL)? (target+=ReceiverL)? ';'
;

SenderL:
	'from' sender=[RoleL | ID]
;

ReceiverL:
	'to' to=[RoleL | ID]
;

ChoiceL:
	'choice' 'at' role=[RoleL | ID] '{'
		message+=MessageL
		branches+=ProtocolL
	'}' ('or' '{'
		message+=MessageL
		branches+=ProtocolL
	'}')*
;

ForEachL:
	'foreach' eachRole=RoleOneL ':' role=[RoleSetL | ID] '{'
		branch=ProtocolL
	'}'
;



Type:
	'int' | 'string' | 'action'  //add more
;


