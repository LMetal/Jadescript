/*
 * generated by Xtext 2.34.0
 */
package org.xtext.globalTypes.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.globalTypes.myDsl.Model

@ExtendWith(InjectionExtension)
@InjectWith(MyDslInjectorProvider)
class MyDslParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	@Inject
private ValidationTestHelper validationTester;
	
	@Test
	def void prova1() {
		val result = parseHelper.parse('''
			global protocol _aaa(role a, role b){
				choice at a{
					INFORM() from a to b;
				} 
				
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
	@Test
	def void erroreChoiceMessage() {
		val result = parseHelper.parse('''
			global protocol _aaa(role a, role b, role c){
				choice at a{
					INFORM() from c to b;
				} 
				
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
