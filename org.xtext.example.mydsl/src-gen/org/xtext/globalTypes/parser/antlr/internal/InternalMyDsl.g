/*
 * generated by Xtext 2.34.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.globalTypes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.globalTypes.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.globalTypes.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDefinitionsQuitDefinitionParserRuleCall_0_0());
				}
				lv_definitions_0_0=ruleQuitDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"definitions",
						lv_definitions_0_0,
						"org.xtext.globalTypes.MyDsl.QuitDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDefinitionsDefinitionParserRuleCall_1_0());
				}
				lv_definitions_1_0=ruleDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"definitions",
						lv_definitions_1_0,
						"org.xtext.globalTypes.MyDsl.Definition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getProtocolGlobalProtocolParserRuleCall_2_0_0());
					}
					lv_protocol_2_0=ruleGlobalProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"protocol",
							lv_protocol_2_0,
							"org.xtext.globalTypes.MyDsl.GlobalProtocol");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getProtocolLocalProtocolParserRuleCall_2_1_0());
					}
					lv_protocol_3_0=ruleLocalProtocol
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						set(
							$current,
							"protocol",
							lv_protocol_3_0,
							"org.xtext.globalTypes.MyDsl.LocalProtocol");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleGlobalProtocol
entryRuleGlobalProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalProtocolRule()); }
	iv_ruleGlobalProtocol=ruleGlobalProtocol
	{ $current=$iv_ruleGlobalProtocol.current; }
	EOF;

// Rule GlobalProtocol
ruleGlobalProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='global'
		{
			newLeafNode(otherlv_0, grammarAccess.getGlobalProtocolAccess().getGlobalKeyword_0());
		}
		otherlv_1='protocol'
		{
			newLeafNode(otherlv_1, grammarAccess.getGlobalProtocolAccess().getProtocolKeyword_1());
		}
		(
			(
				lv_protocolName_2_0=RULE_ID
				{
					newLeafNode(lv_protocolName_2_0, grammarAccess.getGlobalProtocolAccess().getProtocolNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGlobalProtocolRule());
					}
					setWithLastConsumed(
						$current,
						"protocolName",
						lv_protocolName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getGlobalProtocolAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalProtocolAccess().getRolesRolesParserRuleCall_4_0());
				}
				lv_roles_4_0=ruleRoles
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalProtocolRule());
					}
					set(
						$current,
						"roles",
						lv_roles_4_0,
						"org.xtext.globalTypes.MyDsl.Roles");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='){'
		{
			newLeafNode(otherlv_5, grammarAccess.getGlobalProtocolAccess().getRightParenthesisLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalProtocolAccess().getProtocolProtocolParserRuleCall_6_0());
				}
				lv_protocol_6_0=ruleProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalProtocolRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_6_0,
						"org.xtext.globalTypes.MyDsl.Protocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getGlobalProtocolAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_type_0_0='@proposition'
					{
						newLeafNode(lv_type_0_0, grammarAccess.getDefinitionAccess().getTypePropositionKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_0, "@proposition");
					}
				)
			)
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_type_2_0='@action'
					{
						newLeafNode(lv_type_2_0, grammarAccess.getDefinitionAccess().getTypeActionKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_0, "@action");
					}
				)
			)
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_4='('
				{
					newLeafNode(otherlv_4, grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDefinitionAccess().getTypesTypeParserRuleCall_1_2_1_0());
						}
						lv_types_5_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefinitionRule());
							}
							add(
								$current,
								"types",
								lv_types_5_0,
								"org.xtext.globalTypes.MyDsl.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getDefinitionAccess().getCommaKeyword_1_2_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDefinitionAccess().getTypesTypeParserRuleCall_1_2_2_1_0());
							}
							lv_types_7_0=ruleType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDefinitionRule());
								}
								add(
									$current,
									"types",
									lv_types_7_0,
									"org.xtext.globalTypes.MyDsl.Type");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_1_2_3());
				}
			)?
		)
		    |
		(
			(
				(
					lv_type_9_0='@predicate'
					{
						newLeafNode(lv_type_9_0, grammarAccess.getDefinitionAccess().getTypePredicateKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionRule());
						}
						setWithLastConsumed($current, "type", lv_type_9_0, "@predicate");
					}
				)
			)
			(
				(
					lv_name_10_0=RULE_ID
					{
						newLeafNode(lv_name_10_0, grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDefinitionAccess().getTypesTypeParserRuleCall_2_3_0());
					}
					lv_types_12_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDefinitionRule());
						}
						add(
							$current,
							"types",
							lv_types_12_0,
							"org.xtext.globalTypes.MyDsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getDefinitionAccess().getCommaKeyword_2_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDefinitionAccess().getTypesTypeParserRuleCall_2_4_1_0());
						}
						lv_types_14_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDefinitionRule());
							}
							add(
								$current,
								"types",
								lv_types_14_0,
								"org.xtext.globalTypes.MyDsl.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_2_5());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getQuitDefinitionParserRuleCall_3());
		}
		this_QuitDefinition_16=ruleQuitDefinition
		{
			$current = $this_QuitDefinition_16.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuitDefinition
entryRuleQuitDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuitDefinitionRule()); }
	iv_ruleQuitDefinition=ruleQuitDefinition
	{ $current=$iv_ruleQuitDefinition.current; }
	EOF;

// Rule QuitDefinition
ruleQuitDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_0='@action'
				{
					newLeafNode(lv_type_0_0, grammarAccess.getQuitDefinitionAccess().getTypeActionKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuitDefinitionRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_0, "@action");
				}
			)
		)
		(
			(
				lv_name_1_0='QUIT'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getQuitDefinitionAccess().getNameQUITKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuitDefinitionRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "QUIT");
				}
			)
		)
	)
;

// Entry rule entryRuleRoles
entryRuleRoles returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRolesRule()); }
	iv_ruleRoles=ruleRoles
	{ $current=$iv_ruleRoles.current; }
	EOF;

// Rule Roles
ruleRoles returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRolesAccess().getRolesRoleParserRuleCall_0_0());
				}
				lv_roles_0_0=ruleRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRolesRule());
					}
					add(
						$current,
						"roles",
						lv_roles_0_0,
						"org.xtext.globalTypes.MyDsl.Role");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRolesAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRolesAccess().getRolesRoleParserRuleCall_1_1_0());
					}
					lv_roles_2_0=ruleRole
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRolesRule());
						}
						add(
							$current,
							"roles",
							lv_roles_2_0,
							"org.xtext.globalTypes.MyDsl.Role");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	iv_ruleRole=ruleRole
	{ $current=$iv_ruleRole.current; }
	EOF;

// Rule Role
ruleRole returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRoleAccess().getRoleOneParserRuleCall_0());
		}
		this_RoleOne_0=ruleRoleOne
		{
			$current = $this_RoleOne_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRoleAccess().getRoleSetParserRuleCall_1());
		}
		this_RoleSet_1=ruleRoleSet
		{
			$current = $this_RoleSet_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRoleOne
entryRuleRoleOne returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleOneRule()); }
	iv_ruleRoleOne=ruleRoleOne
	{ $current=$iv_ruleRoleOne.current; }
	EOF;

// Rule RoleOne
ruleRoleOne returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='role'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoleOneAccess().getRoleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRoleOneAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoleOneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRoleSet
entryRuleRoleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoleSetRule()); }
	iv_ruleRoleSet=ruleRoleSet
	{ $current=$iv_ruleRoleSet.current; }
	EOF;

// Rule RoleSet
ruleRoleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='roleset'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoleSetAccess().getRolesetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRoleSetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoleSetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoleSetAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoleSetRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getRoleSetAccess().getRefRoleOneCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleProtocol
entryRuleProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	iv_ruleProtocol=ruleProtocol
	{ $current=$iv_ruleProtocol.current; }
	EOF;

// Rule Protocol
ruleProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getBeginChoiceParserRuleCall_0_0());
				}
				lv_begin_0_1=ruleChoice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_1,
						"org.xtext.globalTypes.MyDsl.Choice");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getBeginMessageParserRuleCall_0_1());
				}
				lv_begin_0_2=ruleMessage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_2,
						"org.xtext.globalTypes.MyDsl.Message");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getBeginRecursionParserRuleCall_0_2());
				}
				lv_begin_0_3=ruleRecursion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_3,
						"org.xtext.globalTypes.MyDsl.Recursion");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getBeginForEachParserRuleCall_0_3());
				}
				lv_begin_0_4=ruleForEach
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_4,
						"org.xtext.globalTypes.MyDsl.ForEach");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getBeginCloseRecursionParserRuleCall_0_4());
				}
				lv_begin_0_5=ruleCloseRecursion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_5,
						"org.xtext.globalTypes.MyDsl.CloseRecursion");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolAccess().getBeginEndProtocolParserRuleCall_0_5());
				}
				lv_begin_0_6=ruleEndProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_6,
						"org.xtext.globalTypes.MyDsl.EndProtocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEndProtocol
entryRuleEndProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndProtocolRule()); }
	iv_ruleEndProtocol=ruleEndProtocol
	{ $current=$iv_ruleEndProtocol.current; }
	EOF;

// Rule EndProtocol
ruleEndProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_end_0_0='End'
			{
				newLeafNode(lv_end_0_0, grammarAccess.getEndProtocolAccess().getEndEndKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEndProtocolRule());
				}
				setWithLastConsumed($current, "end", lv_end_0_0, "End");
			}
		)
	)
;

// Entry rule entryRuleRecursion
entryRuleRecursion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecursionRule()); }
	iv_ruleRecursion=ruleRecursion
	{ $current=$iv_ruleRecursion.current; }
	EOF;

// Rule Recursion
ruleRecursion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rec'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecursionAccess().getRecKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRecursionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecursionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRecursionAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRecursionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecursionAccess().getRecProtocolProtocolParserRuleCall_4_0());
				}
				lv_recProtocol_4_0=ruleProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecursionRule());
					}
					set(
						$current,
						"recProtocol",
						lv_recProtocol_4_0,
						"org.xtext.globalTypes.MyDsl.Protocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getRecursionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCloseRecursion
entryRuleCloseRecursion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCloseRecursionRule()); }
	iv_ruleCloseRecursion=ruleCloseRecursion
	{ $current=$iv_ruleCloseRecursion.current; }
	EOF;

// Rule CloseRecursion
ruleCloseRecursion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getCloseRecursionAccess().getLoopKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCloseRecursionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCloseRecursionAccess().getRecursionVariableRecursionCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleForEach
entryRuleForEach returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEachRule()); }
	iv_ruleForEach=ruleForEach
	{ $current=$iv_ruleForEach.current; }
	EOF;

// Rule ForEach
ruleForEach returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForEachAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getLoopRoleRoleOneParserRuleCall_1_0());
				}
				lv_loopRole_1_0=ruleRoleOne
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"loopRole",
						lv_loopRole_1_0,
						"org.xtext.globalTypes.MyDsl.RoleOne");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getForEachAccess().getColonKeyword_2());
		}
		otherlv_3='<'
		{
			newLeafNode(otherlv_3, grammarAccess.getForEachAccess().getLessThanSignKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getForEachAccess().getRolesetRoleSetCrossReference_4_0());
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getForEachAccess().getCommaKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getForEachAccess().getRefRoleRoleOneCrossReference_6_0());
				}
			)
		)
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getForEachAccess().getGreaterThanSignKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getForEachAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getForBodyProtocolParserRuleCall_9_0());
				}
				lv_forBody_9_0=ruleProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"forBody",
						lv_forBody_9_0,
						"org.xtext.globalTypes.MyDsl.Protocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getForEachAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getForEachAccess().getSemicolonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getProtocolProtocolParserRuleCall_12_0());
				}
				lv_protocol_12_0=ruleProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_12_0,
						"org.xtext.globalTypes.MyDsl.Protocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChoice
entryRuleChoice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChoiceRule()); }
	iv_ruleChoice=ruleChoice
	{ $current=$iv_ruleChoice.current; }
	EOF;

// Rule Choice
ruleChoice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='choice'
		{
			newLeafNode(otherlv_0, grammarAccess.getChoiceAccess().getChoiceKeyword_0());
		}
		otherlv_1='at'
		{
			newLeafNode(otherlv_1, grammarAccess.getChoiceAccess().getAtKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChoiceRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getChoiceAccess().getRoleRoleOneCrossReference_2_0());
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getChoiceAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChoiceAccess().getBranchesMessageParserRuleCall_4_0());
				}
				lv_branches_4_0=ruleMessage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChoiceRule());
					}
					add(
						$current,
						"branches",
						lv_branches_4_0,
						"org.xtext.globalTypes.MyDsl.Message");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getChoiceAccess().getRightCurlyBracketKeyword_5());
		}
		(
			otherlv_6='or'
			{
				newLeafNode(otherlv_6, grammarAccess.getChoiceAccess().getOrKeyword_6_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getChoiceAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChoiceAccess().getBranchesMessageParserRuleCall_6_2_0());
					}
					lv_branches_8_0=ruleMessage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChoiceRule());
						}
						add(
							$current,
							"branches",
							lv_branches_8_0,
							"org.xtext.globalTypes.MyDsl.Message");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getChoiceAccess().getRightCurlyBracketKeyword_6_3());
			}
		)*
	)
;

// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	iv_ruleMessage=ruleMessage
	{ $current=$iv_ruleMessage.current; }
	EOF;

// Rule Message
ruleMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMessageAccess().getMessageNormalParserRuleCall_0());
		}
		this_MessageNormal_0=ruleMessageNormal
		{
			$current = $this_MessageNormal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMessageAccess().getMessageQuitParserRuleCall_1());
		}
		this_MessageQuit_1=ruleMessageQuit
		{
			$current = $this_MessageQuit_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMessageNormal
entryRuleMessageNormal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageNormalRule()); }
	iv_ruleMessageNormal=ruleMessageNormal
	{ $current=$iv_ruleMessageNormal.current; }
	EOF;

// Rule MessageNormal
ruleMessageNormal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageNormalRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getMessageNormalAccess().getMessageTypeDefinitionCrossReference_0_0());
				}
			)
		)
		(
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getMessageNormalAccess().getLeftParenthesisKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMessageNormalAccess().getPayloadPayloadParserRuleCall_1_0_1_0());
						}
						lv_payload_2_0=rulePayload
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMessageNormalRule());
							}
							set(
								$current,
								"payload",
								lv_payload_2_0,
								"org.xtext.globalTypes.MyDsl.Payload");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_3=')'
				{
					newLeafNode(otherlv_3, grammarAccess.getMessageNormalAccess().getRightParenthesisKeyword_1_0_2());
				}
			)
			    |
			otherlv_4='()'
			{
				newLeafNode(otherlv_4, grammarAccess.getMessageNormalAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
			}
		)
		otherlv_5='from'
		{
			newLeafNode(otherlv_5, grammarAccess.getMessageNormalAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageNormalRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getMessageNormalAccess().getSenderRoleOneCrossReference_3_0());
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getMessageNormalAccess().getToKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageNormalRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getMessageNormalAccess().getReceiverRoleCrossReference_5_0());
				}
			)
		)
		otherlv_9='.'
		{
			newLeafNode(otherlv_9, grammarAccess.getMessageNormalAccess().getFullStopKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageNormalAccess().getProtocolProtocolParserRuleCall_7_0());
				}
				lv_protocol_10_0=ruleProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageNormalRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_10_0,
						"org.xtext.globalTypes.MyDsl.Protocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMessageQuit
entryRuleMessageQuit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageQuitRule()); }
	iv_ruleMessageQuit=ruleMessageQuit
	{ $current=$iv_ruleMessageQuit.current; }
	EOF;

// Rule MessageQuit
ruleMessageQuit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageQuitRule());
					}
				}
				otherlv_0='QUIT'
				{
					newLeafNode(otherlv_0, grammarAccess.getMessageQuitAccess().getMessageTypeDefinitionCrossReference_0_0());
				}
			)
		)
		otherlv_1='()'
		{
			newLeafNode(otherlv_1, grammarAccess.getMessageQuitAccess().getLeftParenthesisRightParenthesisKeyword_1());
		}
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getMessageQuitAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageQuitRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getMessageQuitAccess().getSenderRoleOneCrossReference_3_0());
				}
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getMessageQuitAccess().getToKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageQuitRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getMessageQuitAccess().getReceiverRoleCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRulePayload
entryRulePayload returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPayloadRule()); }
	iv_rulePayload=rulePayload
	{ $current=$iv_rulePayload.current; }
	EOF;

// Rule Payload
rulePayload returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPayloadAccess().getTypesTypeParserRuleCall_0_0());
				}
				lv_types_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPayloadRule());
					}
					add(
						$current,
						"types",
						lv_types_0_0,
						"org.xtext.globalTypes.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getPayloadAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPayloadAccess().getTypesTypeParserRuleCall_1_1_0());
					}
					lv_types_2_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPayloadRule());
						}
						add(
							$current,
							"types",
							lv_types_2_0,
							"org.xtext.globalTypes.MyDsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLocalProtocol
entryRuleLocalProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalProtocolRule()); }
	iv_ruleLocalProtocol=ruleLocalProtocol
	{ $current=$iv_ruleLocalProtocol.current; }
	EOF;

// Rule LocalProtocol
ruleLocalProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='local'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalProtocolAccess().getLocalKeyword_0());
		}
		otherlv_1='protocol'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocalProtocolAccess().getProtocolKeyword_1());
		}
		(
			(
				lv_protocolName_2_0=RULE_ID
				{
					newLeafNode(lv_protocolName_2_0, grammarAccess.getLocalProtocolAccess().getProtocolNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalProtocolRule());
					}
					setWithLastConsumed(
						$current,
						"protocolName",
						lv_protocolName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='at'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocalProtocolAccess().getAtKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalProtocolAccess().getProjectedRoleRoleParserRuleCall_4_0());
				}
				lv_projectedRole_4_0=ruleRole
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalProtocolRule());
					}
					set(
						$current,
						"projectedRole",
						lv_projectedRole_4_0,
						"org.xtext.globalTypes.MyDsl.Role");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getLocalProtocolAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalProtocolAccess().getRolesRolesParserRuleCall_6_0());
				}
				lv_roles_6_0=ruleRoles
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalProtocolRule());
					}
					set(
						$current,
						"roles",
						lv_roles_6_0,
						"org.xtext.globalTypes.MyDsl.Roles");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='){'
			{
				newLeafNode(otherlv_7, grammarAccess.getLocalProtocolAccess().getRightParenthesisLeftCurlyBracketKeyword_7_0());
			}
			    |
			(
				otherlv_8=')'
				{
					newLeafNode(otherlv_8, grammarAccess.getLocalProtocolAccess().getRightParenthesisKeyword_7_1_0());
				}
				otherlv_9='{'
				{
					newLeafNode(otherlv_9, grammarAccess.getLocalProtocolAccess().getLeftCurlyBracketKeyword_7_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalProtocolAccess().getProtocolProtocolLParserRuleCall_8_0());
				}
				lv_protocol_10_0=ruleProtocolL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalProtocolRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_10_0,
						"org.xtext.globalTypes.MyDsl.ProtocolL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getLocalProtocolAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleProtocolL
entryRuleProtocolL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolLRule()); }
	iv_ruleProtocolL=ruleProtocolL
	{ $current=$iv_ruleProtocolL.current; }
	EOF;

// Rule ProtocolL
ruleProtocolL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProtocolLAccess().getBeginMessageLParserRuleCall_0_0());
				}
				lv_begin_0_1=ruleMessageL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolLRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_1,
						"org.xtext.globalTypes.MyDsl.MessageL");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolLAccess().getBeginChoiceLParserRuleCall_0_1());
				}
				lv_begin_0_2=ruleChoiceL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolLRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_2,
						"org.xtext.globalTypes.MyDsl.ChoiceL");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolLAccess().getBeginForEachLParserRuleCall_0_2());
				}
				lv_begin_0_3=ruleForEachL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolLRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_3,
						"org.xtext.globalTypes.MyDsl.ForEachL");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolLAccess().getBeginRecursionLParserRuleCall_0_3());
				}
				lv_begin_0_4=ruleRecursionL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolLRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_4,
						"org.xtext.globalTypes.MyDsl.RecursionL");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolLAccess().getBeginCloseRecursionLParserRuleCall_0_4());
				}
				lv_begin_0_5=ruleCloseRecursionL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolLRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_5,
						"org.xtext.globalTypes.MyDsl.CloseRecursionL");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProtocolLAccess().getBeginEndProtocolParserRuleCall_0_5());
				}
				lv_begin_0_6=ruleEndProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProtocolLRule());
					}
					set(
						$current,
						"begin",
						lv_begin_0_6,
						"org.xtext.globalTypes.MyDsl.EndProtocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRecursionL
entryRuleRecursionL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecursionLRule()); }
	iv_ruleRecursionL=ruleRecursionL
	{ $current=$iv_ruleRecursionL.current; }
	EOF;

// Rule RecursionL
ruleRecursionL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rec'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecursionLAccess().getRecKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRecursionLAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRecursionLRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRecursionLAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRecursionLAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecursionLAccess().getRecProtocolProtocolLParserRuleCall_4_0());
				}
				lv_recProtocol_4_0=ruleProtocolL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecursionLRule());
					}
					set(
						$current,
						"recProtocol",
						lv_recProtocol_4_0,
						"org.xtext.globalTypes.MyDsl.ProtocolL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getRecursionLAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCloseRecursionL
entryRuleCloseRecursionL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCloseRecursionLRule()); }
	iv_ruleCloseRecursionL=ruleCloseRecursionL
	{ $current=$iv_ruleCloseRecursionL.current; }
	EOF;

// Rule CloseRecursionL
ruleCloseRecursionL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getCloseRecursionLAccess().getLoopKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCloseRecursionLRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCloseRecursionLAccess().getRecursionVariableRecursionLCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleMessageL
entryRuleMessageL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageLRule()); }
	iv_ruleMessageL=ruleMessageL
	{ $current=$iv_ruleMessageL.current; }
	EOF;

// Rule MessageL
ruleMessageL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMessageLAccess().getMessageNormalLParserRuleCall_0());
		}
		this_MessageNormalL_0=ruleMessageNormalL
		{
			$current = $this_MessageNormalL_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMessageLAccess().getMessageQuitLParserRuleCall_1());
		}
		this_MessageQuitL_1=ruleMessageQuitL
		{
			$current = $this_MessageQuitL_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMessageNormalL
entryRuleMessageNormalL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageNormalLRule()); }
	iv_ruleMessageNormalL=ruleMessageNormalL
	{ $current=$iv_ruleMessageNormalL.current; }
	EOF;

// Rule MessageNormalL
ruleMessageNormalL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_messageType_0_0=RULE_ID
				{
					newLeafNode(lv_messageType_0_0, grammarAccess.getMessageNormalLAccess().getMessageTypeIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageNormalLRule());
					}
					setWithLastConsumed(
						$current,
						"messageType",
						lv_messageType_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_1='('
				{
					newLeafNode(otherlv_1, grammarAccess.getMessageNormalLAccess().getLeftParenthesisKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMessageNormalLAccess().getPayloadPayloadParserRuleCall_1_0_1_0());
						}
						lv_payload_2_0=rulePayload
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMessageNormalLRule());
							}
							set(
								$current,
								"payload",
								lv_payload_2_0,
								"org.xtext.globalTypes.MyDsl.Payload");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_3=')'
				{
					newLeafNode(otherlv_3, grammarAccess.getMessageNormalLAccess().getRightParenthesisKeyword_1_0_2());
				}
			)
			    |
			otherlv_4='()'
			{
				newLeafNode(otherlv_4, grammarAccess.getMessageNormalLAccess().getLeftParenthesisRightParenthesisKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageNormalLAccess().getSendReceiveMessageTypeParserRuleCall_2_0());
				}
				lv_sendReceive_5_0=ruleMessageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageNormalLRule());
					}
					set(
						$current,
						"sendReceive",
						lv_sendReceive_5_0,
						"org.xtext.globalTypes.MyDsl.MessageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='.'
		{
			newLeafNode(otherlv_6, grammarAccess.getMessageNormalLAccess().getFullStopKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageNormalLAccess().getProtocolProtocolLParserRuleCall_4_0());
				}
				lv_protocol_7_0=ruleProtocolL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageNormalLRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_7_0,
						"org.xtext.globalTypes.MyDsl.ProtocolL");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMessageQuitL
entryRuleMessageQuitL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageQuitLRule()); }
	iv_ruleMessageQuitL=ruleMessageQuitL
	{ $current=$iv_ruleMessageQuitL.current; }
	EOF;

// Rule MessageQuitL
ruleMessageQuitL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_messageType_0_0='QUIT'
				{
					newLeafNode(lv_messageType_0_0, grammarAccess.getMessageQuitLAccess().getMessageTypeQUITKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMessageQuitLRule());
					}
					setWithLastConsumed($current, "messageType", lv_messageType_0_0, "QUIT");
				}
			)
		)
		otherlv_1='()'
		{
			newLeafNode(otherlv_1, grammarAccess.getMessageQuitLAccess().getLeftParenthesisRightParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMessageQuitLAccess().getSendReceiveMessageTypeParserRuleCall_2_0());
				}
				lv_sendReceive_2_0=ruleMessageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMessageQuitLRule());
					}
					set(
						$current,
						"sendReceive",
						lv_sendReceive_2_0,
						"org.xtext.globalTypes.MyDsl.MessageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMessageType
entryRuleMessageType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMessageTypeRule()); }
	iv_ruleMessageType=ruleMessageType
	{ $current=$iv_ruleMessageType.current; }
	EOF;

// Rule MessageType
ruleMessageType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMessageTypeAccess().getSenderLParserRuleCall_0());
		}
		this_SenderL_0=ruleSenderL
		{
			$current = $this_SenderL_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMessageTypeAccess().getReceiverLParserRuleCall_1());
		}
		this_ReceiverL_1=ruleReceiverL
		{
			$current = $this_ReceiverL_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSenderL
entryRuleSenderL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSenderLRule()); }
	iv_ruleSenderL=ruleSenderL
	{ $current=$iv_ruleSenderL.current; }
	EOF;

// Rule SenderL
ruleSenderL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='from'
		{
			newLeafNode(otherlv_0, grammarAccess.getSenderLAccess().getFromKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSenderLRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSenderLAccess().getRoleRoleCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleReceiverL
entryRuleReceiverL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverLRule()); }
	iv_ruleReceiverL=ruleReceiverL
	{ $current=$iv_ruleReceiverL.current; }
	EOF;

// Rule ReceiverL
ruleReceiverL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='to'
		{
			newLeafNode(otherlv_0, grammarAccess.getReceiverLAccess().getToKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReceiverLRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getReceiverLAccess().getRoleRoleCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleChoiceL
entryRuleChoiceL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChoiceLRule()); }
	iv_ruleChoiceL=ruleChoiceL
	{ $current=$iv_ruleChoiceL.current; }
	EOF;

// Rule ChoiceL
ruleChoiceL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='choice'
		{
			newLeafNode(otherlv_0, grammarAccess.getChoiceLAccess().getChoiceKeyword_0());
		}
		otherlv_1='at'
		{
			newLeafNode(otherlv_1, grammarAccess.getChoiceLAccess().getAtKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChoiceLRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getChoiceLAccess().getRoleMakingChoiceRoleCrossReference_2_0());
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getChoiceLAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChoiceLAccess().getBranchesMessageLParserRuleCall_4_0());
				}
				lv_branches_4_0=ruleMessageL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChoiceLRule());
					}
					add(
						$current,
						"branches",
						lv_branches_4_0,
						"org.xtext.globalTypes.MyDsl.MessageL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getChoiceLAccess().getRightCurlyBracketKeyword_5());
		}
		(
			otherlv_6='or'
			{
				newLeafNode(otherlv_6, grammarAccess.getChoiceLAccess().getOrKeyword_6_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getChoiceLAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChoiceLAccess().getBranchesMessageLParserRuleCall_6_2_0());
					}
					lv_branches_8_0=ruleMessageL
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChoiceLRule());
						}
						add(
							$current,
							"branches",
							lv_branches_8_0,
							"org.xtext.globalTypes.MyDsl.MessageL");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getChoiceLAccess().getRightCurlyBracketKeyword_6_3());
			}
		)*
	)
;

// Entry rule entryRuleForEachL
entryRuleForEachL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEachLRule()); }
	iv_ruleForEachL=ruleForEachL
	{ $current=$iv_ruleForEachL.current; }
	EOF;

// Rule ForEachL
ruleForEachL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForEachLAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachLAccess().getEachRoleRoleOneParserRuleCall_1_0());
				}
				lv_eachRole_1_0=ruleRoleOne
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachLRule());
					}
					set(
						$current,
						"eachRole",
						lv_eachRole_1_0,
						"org.xtext.globalTypes.MyDsl.RoleOne");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getForEachLAccess().getColonKeyword_2());
		}
		otherlv_3='<'
		{
			newLeafNode(otherlv_3, grammarAccess.getForEachLAccess().getLessThanSignKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachLRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getForEachLAccess().getRolesetRoleSetCrossReference_4_0());
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getForEachLAccess().getCommaKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachLRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getForEachLAccess().getRefroleRoleOneCrossReference_6_0());
				}
			)
		)
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getForEachLAccess().getGreaterThanSignKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getForEachLAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachLAccess().getBranchProtocolLParserRuleCall_9_0());
				}
				lv_branch_9_0=ruleProtocolL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachLRule());
					}
					set(
						$current,
						"branch",
						lv_branch_9_0,
						"org.xtext.globalTypes.MyDsl.ProtocolL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getForEachLAccess().getRightCurlyBracketKeyword_10());
		}
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getForEachLAccess().getSemicolonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachLAccess().getProtocolProtocolLParserRuleCall_12_0());
				}
				lv_protocol_12_0=ruleProtocolL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachLRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_12_0,
						"org.xtext.globalTypes.MyDsl.ProtocolL");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='integer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getIntegerKeyword_0());
		}
		    |
		kw='text'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getTextKeyword_1());
		}
		    |
		kw='aid'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getAidKeyword_2());
		}
		    |
		kw='float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getFloatKeyword_3());
		}
	)
;

RULE_NUM : ('0'|'1'..'9' ('0'..'9')*);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
