/*
 * generated by Xtext 2.34.0
 */
package org.xtext.globalTypes.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cProtocolAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cProtocolGlobalProtocolParserRuleCall_0_0 = (RuleCall)cProtocolAssignment_0.eContents().get(0);
		private final Assignment cProtocolAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cProtocolLocalProtocolParserRuleCall_1_0 = (RuleCall)cProtocolAssignment_1.eContents().get(0);
		
		//Model:
		//    protocol = GlobalProtocol | protocol = LocalProtocol
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//protocol = GlobalProtocol | protocol = LocalProtocol
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//protocol = GlobalProtocol
		public Assignment getProtocolAssignment_0() { return cProtocolAssignment_0; }
		
		//GlobalProtocol
		public RuleCall getProtocolGlobalProtocolParserRuleCall_0_0() { return cProtocolGlobalProtocolParserRuleCall_0_0; }
		
		//protocol = LocalProtocol
		public Assignment getProtocolAssignment_1() { return cProtocolAssignment_1; }
		
		//LocalProtocol
		public RuleCall getProtocolLocalProtocolParserRuleCall_1_0() { return cProtocolLocalProtocolParserRuleCall_1_0; }
	}
	public class GlobalProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.GlobalProtocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGlobalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cProtocolKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProtocolNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProtocolNamePROTOCOLNAMETerminalRuleCall_2_0 = (RuleCall)cProtocolNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRolesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRolesRolesParserRuleCall_4_0 = (RuleCall)cRolesAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cProtocolAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cProtocolProtocolParserRuleCall_6_0 = (RuleCall)cProtocolAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//GlobalProtocol:
		//    'global' 'protocol' protocolName=PROTOCOLNAME '(' roles=Roles '){'protocol=Protocol'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'global' 'protocol' protocolName=PROTOCOLNAME '(' roles=Roles '){'protocol=Protocol'}'
		public Group getGroup() { return cGroup; }
		
		//'global'
		public Keyword getGlobalKeyword_0() { return cGlobalKeyword_0; }
		
		//'protocol'
		public Keyword getProtocolKeyword_1() { return cProtocolKeyword_1; }
		
		//protocolName=PROTOCOLNAME
		public Assignment getProtocolNameAssignment_2() { return cProtocolNameAssignment_2; }
		
		//PROTOCOLNAME
		public RuleCall getProtocolNamePROTOCOLNAMETerminalRuleCall_2_0() { return cProtocolNamePROTOCOLNAMETerminalRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//roles=Roles
		public Assignment getRolesAssignment_4() { return cRolesAssignment_4; }
		
		//Roles
		public RuleCall getRolesRolesParserRuleCall_4_0() { return cRolesRolesParserRuleCall_4_0; }
		
		//'){'
		public Keyword getRightParenthesisLeftCurlyBracketKeyword_5() { return cRightParenthesisLeftCurlyBracketKeyword_5; }
		
		//protocol=Protocol
		public Assignment getProtocolAssignment_6() { return cProtocolAssignment_6; }
		
		//Protocol
		public RuleCall getProtocolProtocolParserRuleCall_6_0() { return cProtocolProtocolParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RolesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Roles");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRolesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRolesRoleParserRuleCall_0_0 = (RuleCall)cRolesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRolesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRolesRoleParserRuleCall_1_1_0 = (RuleCall)cRolesAssignment_1_1.eContents().get(0);
		
		//Roles:
		//    roles+=Role (',' roles+=Role)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//roles+=Role (',' roles+=Role)*
		public Group getGroup() { return cGroup; }
		
		//roles+=Role
		public Assignment getRolesAssignment_0() { return cRolesAssignment_0; }
		
		//Role
		public RuleCall getRolesRoleParserRuleCall_0_0() { return cRolesRoleParserRuleCall_0_0; }
		
		//(',' roles+=Role)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//roles+=Role
		public Assignment getRolesAssignment_1_1() { return cRolesAssignment_1_1; }
		
		//Role
		public RuleCall getRolesRoleParserRuleCall_1_1_0() { return cRolesRoleParserRuleCall_1_1_0; }
	}
	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Role");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRoleOneParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRoleSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Role:
		//    RoleOne | RoleSet
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RoleOne | RoleSet
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RoleOne
		public RuleCall getRoleOneParserRuleCall_0() { return cRoleOneParserRuleCall_0; }
		
		//RoleSet
		public RuleCall getRoleSetParserRuleCall_1() { return cRoleSetParserRuleCall_1; }
	}
	public class RoleOneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.RoleOne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameROLENAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//RoleOne:
		//    'role' name=ROLENAME
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'role' name=ROLENAME
		public Group getGroup() { return cGroup; }
		
		//'role'
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }
		
		//name=ROLENAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ROLENAME
		public RuleCall getNameROLENAMETerminalRuleCall_1_0() { return cNameROLENAMETerminalRuleCall_1_0; }
	}
	public class RoleSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.RoleSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRolesetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameROLESETNAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRefRoleOneCrossReference_3_0 = (CrossReference)cRefAssignment_3.eContents().get(0);
		private final RuleCall cRefRoleOneROLENAMETerminalRuleCall_3_0_1 = (RuleCall)cRefRoleOneCrossReference_3_0.eContents().get(1);
		
		//RoleSet:
		//    'roleset' name=ROLESETNAME ':' ref=[RoleOne | ROLENAME]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'roleset' name=ROLESETNAME ':' ref=[RoleOne | ROLENAME]
		public Group getGroup() { return cGroup; }
		
		//'roleset'
		public Keyword getRolesetKeyword_0() { return cRolesetKeyword_0; }
		
		//name=ROLESETNAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ROLESETNAME
		public RuleCall getNameROLESETNAMETerminalRuleCall_1_0() { return cNameROLESETNAMETerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//ref=[RoleOne | ROLENAME]
		public Assignment getRefAssignment_3() { return cRefAssignment_3; }
		
		//[RoleOne | ROLENAME]
		public CrossReference getRefRoleOneCrossReference_3_0() { return cRefRoleOneCrossReference_3_0; }
		
		//ROLENAME
		public RuleCall getRefRoleOneROLENAMETerminalRuleCall_3_0_1() { return cRefRoleOneROLENAMETerminalRuleCall_3_0_1; }
	}
	public class ProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Protocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProtocolAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cActionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cActionsAlternatives_1_0 = (Alternatives)cActionsAssignment_1.eContents().get(0);
		private final RuleCall cActionsMessageParserRuleCall_1_0_0 = (RuleCall)cActionsAlternatives_1_0.eContents().get(0);
		private final RuleCall cActionsChoiceParserRuleCall_1_0_1 = (RuleCall)cActionsAlternatives_1_0.eContents().get(1);
		private final RuleCall cActionsRecursionParserRuleCall_1_0_2 = (RuleCall)cActionsAlternatives_1_0.eContents().get(2);
		private final RuleCall cActionsForEachParserRuleCall_1_0_3 = (RuleCall)cActionsAlternatives_1_0.eContents().get(3);
		private final RuleCall cActionsCloseRecursionParserRuleCall_1_0_4 = (RuleCall)cActionsAlternatives_1_0.eContents().get(4);
		
		//Protocol:
		//    {Protocol} (actions+=(Message | Choice | Recursion | ForEach | CloseRecursion))*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Protocol} (actions+=(Message | Choice | Recursion | ForEach | CloseRecursion))*
		public Group getGroup() { return cGroup; }
		
		//{Protocol}
		public Action getProtocolAction_0() { return cProtocolAction_0; }
		
		//(actions+=(Message | Choice | Recursion | ForEach | CloseRecursion))*
		public Assignment getActionsAssignment_1() { return cActionsAssignment_1; }
		
		//(Message | Choice | Recursion | ForEach | CloseRecursion)
		public Alternatives getActionsAlternatives_1_0() { return cActionsAlternatives_1_0; }
		
		//Message
		public RuleCall getActionsMessageParserRuleCall_1_0_0() { return cActionsMessageParserRuleCall_1_0_0; }
		
		//Choice
		public RuleCall getActionsChoiceParserRuleCall_1_0_1() { return cActionsChoiceParserRuleCall_1_0_1; }
		
		//Recursion
		public RuleCall getActionsRecursionParserRuleCall_1_0_2() { return cActionsRecursionParserRuleCall_1_0_2; }
		
		//ForEach
		public RuleCall getActionsForEachParserRuleCall_1_0_3() { return cActionsForEachParserRuleCall_1_0_3; }
		
		//CloseRecursion
		public RuleCall getActionsCloseRecursionParserRuleCall_1_0_4() { return cActionsCloseRecursionParserRuleCall_1_0_4; }
	}
	public class RecursionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Recursion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRecKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameRECNAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Recursion:
		//    'rec' name=RECNAME ':'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'rec' name=RECNAME ':'
		public Group getGroup() { return cGroup; }
		
		//'rec'
		public Keyword getRecKeyword_0() { return cRecKeyword_0; }
		
		//name=RECNAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//RECNAME
		public RuleCall getNameRECNAMETerminalRuleCall_1_0() { return cNameRECNAMETerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
	}
	public class CloseRecursionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.CloseRecursion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRecursionVariableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRecursionVariableRecursionCrossReference_1_0 = (CrossReference)cRecursionVariableAssignment_1.eContents().get(0);
		private final RuleCall cRecursionVariableRecursionRECNAMETerminalRuleCall_1_0_1 = (RuleCall)cRecursionVariableRecursionCrossReference_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//CloseRecursion:
		//    'loop' recursionVariable=[Recursion | RECNAME] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'loop' recursionVariable=[Recursion | RECNAME] ';'
		public Group getGroup() { return cGroup; }
		
		//'loop'
		public Keyword getLoopKeyword_0() { return cLoopKeyword_0; }
		
		//recursionVariable=[Recursion | RECNAME]
		public Assignment getRecursionVariableAssignment_1() { return cRecursionVariableAssignment_1; }
		
		//[Recursion | RECNAME]
		public CrossReference getRecursionVariableRecursionCrossReference_1_0() { return cRecursionVariableRecursionCrossReference_1_0; }
		
		//RECNAME
		public RuleCall getRecursionVariableRecursionRECNAMETerminalRuleCall_1_0_1() { return cRecursionVariableRecursionRECNAMETerminalRuleCall_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class ForEachElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.ForEach");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForeachKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEachRoleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEachRoleRoleOneParserRuleCall_1_0 = (RuleCall)cEachRoleAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRoleRoleSetCrossReference_3_0 = (CrossReference)cRoleAssignment_3.eContents().get(0);
		private final RuleCall cRoleRoleSetROLESETNAMETerminalRuleCall_3_0_1 = (RuleCall)cRoleRoleSetCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBranchAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBranchProtocolParserRuleCall_5_0 = (RuleCall)cBranchAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ForEach: // add ref
		//    'foreach' eachRole=RoleOne ':' role=[RoleSet | ROLESETNAME] '{'
		//        branch=Protocol
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// add ref
		//   'foreach' eachRole=RoleOne ':' role=[RoleSet | ROLESETNAME] '{'
		//       branch=Protocol
		//   '}'
		public Group getGroup() { return cGroup; }
		
		//// add ref
		//   'foreach'
		public Keyword getForeachKeyword_0() { return cForeachKeyword_0; }
		
		//eachRole=RoleOne
		public Assignment getEachRoleAssignment_1() { return cEachRoleAssignment_1; }
		
		//RoleOne
		public RuleCall getEachRoleRoleOneParserRuleCall_1_0() { return cEachRoleRoleOneParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//role=[RoleSet | ROLESETNAME]
		public Assignment getRoleAssignment_3() { return cRoleAssignment_3; }
		
		//[RoleSet | ROLESETNAME]
		public CrossReference getRoleRoleSetCrossReference_3_0() { return cRoleRoleSetCrossReference_3_0; }
		
		//ROLESETNAME
		public RuleCall getRoleRoleSetROLESETNAMETerminalRuleCall_3_0_1() { return cRoleRoleSetROLESETNAMETerminalRuleCall_3_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//branch=Protocol
		public Assignment getBranchAssignment_5() { return cBranchAssignment_5; }
		
		//Protocol
		public RuleCall getBranchProtocolParserRuleCall_5_0() { return cBranchProtocolParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ChoiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Choice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRoleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRoleRoleOneCrossReference_2_0 = (CrossReference)cRoleAssignment_2.eContents().get(0);
		private final RuleCall cRoleRoleOneROLENAMETerminalRuleCall_2_0_1 = (RuleCall)cRoleRoleOneCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMessageAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMessageMessageParserRuleCall_4_0 = (RuleCall)cMessageAssignment_4.eContents().get(0);
		private final Assignment cBranchesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBranchesProtocolParserRuleCall_5_0 = (RuleCall)cBranchesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cOrKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cMessageAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMessageMessageParserRuleCall_7_2_0 = (RuleCall)cMessageAssignment_7_2.eContents().get(0);
		private final Assignment cBranchesAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cBranchesProtocolParserRuleCall_7_3_0 = (RuleCall)cBranchesAssignment_7_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		
		//Choice:
		//    'choice' 'at' role=[RoleOne | ROLENAME] '{'
		//        message+=Message
		//        branches+=Protocol
		//    '}' ('or' '{'
		//        message+=Message
		//        branches+=Protocol
		//    '}')*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'choice' 'at' role=[RoleOne | ROLENAME] '{'
		//    message+=Message
		//    branches+=Protocol
		//'}' ('or' '{'
		//    message+=Message
		//    branches+=Protocol
		//'}')*
		public Group getGroup() { return cGroup; }
		
		//'choice'
		public Keyword getChoiceKeyword_0() { return cChoiceKeyword_0; }
		
		//'at'
		public Keyword getAtKeyword_1() { return cAtKeyword_1; }
		
		//role=[RoleOne | ROLENAME]
		public Assignment getRoleAssignment_2() { return cRoleAssignment_2; }
		
		//[RoleOne | ROLENAME]
		public CrossReference getRoleRoleOneCrossReference_2_0() { return cRoleRoleOneCrossReference_2_0; }
		
		//ROLENAME
		public RuleCall getRoleRoleOneROLENAMETerminalRuleCall_2_0_1() { return cRoleRoleOneROLENAMETerminalRuleCall_2_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//message+=Message
		public Assignment getMessageAssignment_4() { return cMessageAssignment_4; }
		
		//Message
		public RuleCall getMessageMessageParserRuleCall_4_0() { return cMessageMessageParserRuleCall_4_0; }
		
		//branches+=Protocol
		public Assignment getBranchesAssignment_5() { return cBranchesAssignment_5; }
		
		//Protocol
		public RuleCall getBranchesProtocolParserRuleCall_5_0() { return cBranchesProtocolParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//('or' '{'
		//       message+=Message
		//       branches+=Protocol
		//   '}')*
		public Group getGroup_7() { return cGroup_7; }
		
		//'or'
		public Keyword getOrKeyword_7_0() { return cOrKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//message+=Message
		public Assignment getMessageAssignment_7_2() { return cMessageAssignment_7_2; }
		
		//Message
		public RuleCall getMessageMessageParserRuleCall_7_2_0() { return cMessageMessageParserRuleCall_7_2_0; }
		
		//branches+=Protocol
		public Assignment getBranchesAssignment_7_3() { return cBranchesAssignment_7_3; }
		
		//Protocol
		public RuleCall getBranchesProtocolParserRuleCall_7_3_0() { return cBranchesProtocolParserRuleCall_7_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageTypeMessageTypeParserRuleCall_0_0 = (RuleCall)cMessageTypeAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPayloadAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPayloadPayloadParserRuleCall_2_0 = (RuleCall)cPayloadAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSenderAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSenderRoleOneCrossReference_5_0 = (CrossReference)cSenderAssignment_5.eContents().get(0);
		private final RuleCall cSenderRoleOneROLENAMETerminalRuleCall_5_0_1 = (RuleCall)cSenderRoleOneCrossReference_5_0.eContents().get(1);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReceiverAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cReceiverRoleOneCrossReference_7_0 = (CrossReference)cReceiverAssignment_7.eContents().get(0);
		private final RuleCall cReceiverRoleOneROLENAMETerminalRuleCall_7_0_1 = (RuleCall)cReceiverRoleOneCrossReference_7_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Message:
		//    messageType=MessageType '(' payload=Payload? ')' 'from' sender=[RoleOne | ROLENAME] 'to' receiver=[RoleOne | ROLENAME] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//messageType=MessageType '(' payload=Payload? ')' 'from' sender=[RoleOne | ROLENAME] 'to' receiver=[RoleOne | ROLENAME] ';'
		public Group getGroup() { return cGroup; }
		
		//messageType=MessageType
		public Assignment getMessageTypeAssignment_0() { return cMessageTypeAssignment_0; }
		
		//MessageType
		public RuleCall getMessageTypeMessageTypeParserRuleCall_0_0() { return cMessageTypeMessageTypeParserRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//payload=Payload?
		public Assignment getPayloadAssignment_2() { return cPayloadAssignment_2; }
		
		//Payload
		public RuleCall getPayloadPayloadParserRuleCall_2_0() { return cPayloadPayloadParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'from'
		public Keyword getFromKeyword_4() { return cFromKeyword_4; }
		
		//sender=[RoleOne | ROLENAME]
		public Assignment getSenderAssignment_5() { return cSenderAssignment_5; }
		
		//[RoleOne | ROLENAME]
		public CrossReference getSenderRoleOneCrossReference_5_0() { return cSenderRoleOneCrossReference_5_0; }
		
		//ROLENAME
		public RuleCall getSenderRoleOneROLENAMETerminalRuleCall_5_0_1() { return cSenderRoleOneROLENAMETerminalRuleCall_5_0_1; }
		
		//'to'
		public Keyword getToKeyword_6() { return cToKeyword_6; }
		
		//receiver=[RoleOne | ROLENAME]
		public Assignment getReceiverAssignment_7() { return cReceiverAssignment_7; }
		
		//[RoleOne | ROLENAME]
		public CrossReference getReceiverRoleOneCrossReference_7_0() { return cReceiverRoleOneCrossReference_7_0; }
		
		//ROLENAME
		public RuleCall getReceiverRoleOneROLENAMETerminalRuleCall_7_0_1() { return cReceiverRoleOneROLENAMETerminalRuleCall_7_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class PayloadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Payload");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cPayloadAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Assignment cTypesAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final RuleCall cTypesTypeParserRuleCall_0_1_0_0 = (RuleCall)cTypesAssignment_0_1_0.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cGroup_0_1.eContents().get(1);
		private final Keyword cCommaKeyword_0_1_1_0 = (Keyword)cGroup_0_1_1.eContents().get(0);
		private final Assignment cTypesAssignment_0_1_1_1 = (Assignment)cGroup_0_1_1.eContents().get(1);
		private final RuleCall cTypesTypeParserRuleCall_0_1_1_1_0 = (RuleCall)cTypesAssignment_0_1_1_1.eContents().get(0);
		private final Assignment cTypesAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cTypesIDTerminalRuleCall_1_0 = (RuleCall)cTypesAssignment_1.eContents().get(0);
		
		//Payload:
		//    {Payload} (types+=Type (','types+=Type)*) | types+=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Payload} (types+=Type (','types+=Type)*) | types+=ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{Payload} (types+=Type (','types+=Type)*)
		public Group getGroup_0() { return cGroup_0; }
		
		//{Payload}
		public Action getPayloadAction_0_0() { return cPayloadAction_0_0; }
		
		//(types+=Type (','types+=Type)*)
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//types+=Type
		public Assignment getTypesAssignment_0_1_0() { return cTypesAssignment_0_1_0; }
		
		//Type
		public RuleCall getTypesTypeParserRuleCall_0_1_0_0() { return cTypesTypeParserRuleCall_0_1_0_0; }
		
		//(','types+=Type)*
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }
		
		//','
		public Keyword getCommaKeyword_0_1_1_0() { return cCommaKeyword_0_1_1_0; }
		
		//types+=Type
		public Assignment getTypesAssignment_0_1_1_1() { return cTypesAssignment_0_1_1_1; }
		
		//Type
		public RuleCall getTypesTypeParserRuleCall_0_1_1_1_0() { return cTypesTypeParserRuleCall_0_1_1_1_0; }
		
		//types+=ID
		public Assignment getTypesAssignment_1() { return cTypesAssignment_1; }
		
		//ID
		public RuleCall getTypesIDTerminalRuleCall_1_0() { return cTypesIDTerminalRuleCall_1_0; }
	}
	public class LocalProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.LocalProtocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLocalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cProtocolKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProtocolNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProtocolNamePROTOCOLNAMETerminalRuleCall_2_0 = (RuleCall)cProtocolNameAssignment_2.eContents().get(0);
		private final Keyword cProjectionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cOnKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cProjectedRoleAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cProjectedRoleROLENAMETerminalRuleCall_5_0_0 = (RuleCall)cProjectedRoleAssignment_5_0.eContents().get(0);
		private final Assignment cProjectedRoleAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cProjectedRoleROLESETNAMETerminalRuleCall_5_1_0 = (RuleCall)cProjectedRoleAssignment_5_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRolesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRolesRolesLParserRuleCall_7_0 = (RuleCall)cRolesAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cProtocolAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cProtocolProtocolLParserRuleCall_10_0 = (RuleCall)cProtocolAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//LocalProtocol:
		//    'local' 'protocol' protocolName=PROTOCOLNAME 'projection' 'on' (projectedRole=ROLENAME | projectedRole=ROLESETNAME) '(' roles=RolesL ')' '{'protocol=ProtocolL'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'local' 'protocol' protocolName=PROTOCOLNAME 'projection' 'on' (projectedRole=ROLENAME | projectedRole=ROLESETNAME) '(' roles=RolesL ')' '{'protocol=ProtocolL'}'
		public Group getGroup() { return cGroup; }
		
		//'local'
		public Keyword getLocalKeyword_0() { return cLocalKeyword_0; }
		
		//'protocol'
		public Keyword getProtocolKeyword_1() { return cProtocolKeyword_1; }
		
		//protocolName=PROTOCOLNAME
		public Assignment getProtocolNameAssignment_2() { return cProtocolNameAssignment_2; }
		
		//PROTOCOLNAME
		public RuleCall getProtocolNamePROTOCOLNAMETerminalRuleCall_2_0() { return cProtocolNamePROTOCOLNAMETerminalRuleCall_2_0; }
		
		//'projection'
		public Keyword getProjectionKeyword_3() { return cProjectionKeyword_3; }
		
		//'on'
		public Keyword getOnKeyword_4() { return cOnKeyword_4; }
		
		//(projectedRole=ROLENAME | projectedRole=ROLESETNAME)
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//projectedRole=ROLENAME
		public Assignment getProjectedRoleAssignment_5_0() { return cProjectedRoleAssignment_5_0; }
		
		//ROLENAME
		public RuleCall getProjectedRoleROLENAMETerminalRuleCall_5_0_0() { return cProjectedRoleROLENAMETerminalRuleCall_5_0_0; }
		
		//projectedRole=ROLESETNAME
		public Assignment getProjectedRoleAssignment_5_1() { return cProjectedRoleAssignment_5_1; }
		
		//ROLESETNAME
		public RuleCall getProjectedRoleROLESETNAMETerminalRuleCall_5_1_0() { return cProjectedRoleROLESETNAMETerminalRuleCall_5_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//roles=RolesL
		public Assignment getRolesAssignment_7() { return cRolesAssignment_7; }
		
		//RolesL
		public RuleCall getRolesRolesLParserRuleCall_7_0() { return cRolesRolesLParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//protocol=ProtocolL
		public Assignment getProtocolAssignment_10() { return cProtocolAssignment_10; }
		
		//ProtocolL
		public RuleCall getProtocolProtocolLParserRuleCall_10_0() { return cProtocolProtocolLParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class RolesLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.RolesL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRolesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRolesRoleLParserRuleCall_0_0 = (RuleCall)cRolesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRolesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRolesRoleLParserRuleCall_1_1_0 = (RuleCall)cRolesAssignment_1_1.eContents().get(0);
		
		//RolesL:
		//    roles+=RoleL (',' roles+=RoleL)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//roles+=RoleL (',' roles+=RoleL)*
		public Group getGroup() { return cGroup; }
		
		//roles+=RoleL
		public Assignment getRolesAssignment_0() { return cRolesAssignment_0; }
		
		//RoleL
		public RuleCall getRolesRoleLParserRuleCall_0_0() { return cRolesRoleLParserRuleCall_0_0; }
		
		//(',' roles+=RoleL)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//roles+=RoleL
		public Assignment getRolesAssignment_1_1() { return cRolesAssignment_1_1; }
		
		//RoleL
		public RuleCall getRolesRoleLParserRuleCall_1_1_0() { return cRolesRoleLParserRuleCall_1_1_0; }
	}
	public class RoleLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.RoleL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRoleOneLParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRoleSetLParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RoleL:
		//    RoleOneL | RoleSetL
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RoleOneL | RoleSetL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RoleOneL
		public RuleCall getRoleOneLParserRuleCall_0() { return cRoleOneLParserRuleCall_0; }
		
		//RoleSetL
		public RuleCall getRoleSetLParserRuleCall_1() { return cRoleSetLParserRuleCall_1; }
	}
	public class RoleOneLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.RoleOneL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameROLENAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//RoleOneL:
		//    'role' name=ROLENAME
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'role' name=ROLENAME
		public Group getGroup() { return cGroup; }
		
		//'role'
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }
		
		//name=ROLENAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ROLENAME
		public RuleCall getNameROLENAMETerminalRuleCall_1_0() { return cNameROLENAMETerminalRuleCall_1_0; }
	}
	public class RoleSetLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.RoleSetL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRolesetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameROLESETNAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRefRoleOneLCrossReference_3_0 = (CrossReference)cRefAssignment_3.eContents().get(0);
		private final RuleCall cRefRoleOneLROLENAMETerminalRuleCall_3_0_1 = (RuleCall)cRefRoleOneLCrossReference_3_0.eContents().get(1);
		
		//RoleSetL:
		//    'roleset' name=ROLESETNAME ':' ref=[RoleOneL | ROLENAME]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'roleset' name=ROLESETNAME ':' ref=[RoleOneL | ROLENAME]
		public Group getGroup() { return cGroup; }
		
		//'roleset'
		public Keyword getRolesetKeyword_0() { return cRolesetKeyword_0; }
		
		//name=ROLESETNAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ROLESETNAME
		public RuleCall getNameROLESETNAMETerminalRuleCall_1_0() { return cNameROLESETNAMETerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//ref=[RoleOneL | ROLENAME]
		public Assignment getRefAssignment_3() { return cRefAssignment_3; }
		
		//[RoleOneL | ROLENAME]
		public CrossReference getRefRoleOneLCrossReference_3_0() { return cRefRoleOneLCrossReference_3_0; }
		
		//ROLENAME
		public RuleCall getRefRoleOneLROLENAMETerminalRuleCall_3_0_1() { return cRefRoleOneLROLENAMETerminalRuleCall_3_0_1; }
	}
	public class ProtocolLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.ProtocolL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProtocolLAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cActionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cActionsAlternatives_1_0 = (Alternatives)cActionsAssignment_1.eContents().get(0);
		private final RuleCall cActionsMessageLParserRuleCall_1_0_0 = (RuleCall)cActionsAlternatives_1_0.eContents().get(0);
		private final RuleCall cActionsMessageParserRuleCall_1_0_1 = (RuleCall)cActionsAlternatives_1_0.eContents().get(1);
		private final RuleCall cActionsChoiceLParserRuleCall_1_0_2 = (RuleCall)cActionsAlternatives_1_0.eContents().get(2);
		private final RuleCall cActionsForEachLParserRuleCall_1_0_3 = (RuleCall)cActionsAlternatives_1_0.eContents().get(3);
		private final RuleCall cActionsRecursionParserRuleCall_1_0_4 = (RuleCall)cActionsAlternatives_1_0.eContents().get(4);
		private final RuleCall cActionsCloseRecursionParserRuleCall_1_0_5 = (RuleCall)cActionsAlternatives_1_0.eContents().get(5);
		
		//ProtocolL:
		//    {ProtocolL} (actions+=(MessageL | Message | ChoiceL | ForEachL | Recursion | CloseRecursion))*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ProtocolL} (actions+=(MessageL | Message | ChoiceL | ForEachL | Recursion | CloseRecursion))*
		public Group getGroup() { return cGroup; }
		
		//{ProtocolL}
		public Action getProtocolLAction_0() { return cProtocolLAction_0; }
		
		//(actions+=(MessageL | Message | ChoiceL | ForEachL | Recursion | CloseRecursion))*
		public Assignment getActionsAssignment_1() { return cActionsAssignment_1; }
		
		//(MessageL | Message | ChoiceL | ForEachL | Recursion | CloseRecursion)
		public Alternatives getActionsAlternatives_1_0() { return cActionsAlternatives_1_0; }
		
		//MessageL
		public RuleCall getActionsMessageLParserRuleCall_1_0_0() { return cActionsMessageLParserRuleCall_1_0_0; }
		
		//Message
		public RuleCall getActionsMessageParserRuleCall_1_0_1() { return cActionsMessageParserRuleCall_1_0_1; }
		
		//ChoiceL
		public RuleCall getActionsChoiceLParserRuleCall_1_0_2() { return cActionsChoiceLParserRuleCall_1_0_2; }
		
		//ForEachL
		public RuleCall getActionsForEachLParserRuleCall_1_0_3() { return cActionsForEachLParserRuleCall_1_0_3; }
		
		//Recursion
		public RuleCall getActionsRecursionParserRuleCall_1_0_4() { return cActionsRecursionParserRuleCall_1_0_4; }
		
		//CloseRecursion
		public RuleCall getActionsCloseRecursionParserRuleCall_1_0_5() { return cActionsCloseRecursionParserRuleCall_1_0_5; }
	}
	public class MessageLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.MessageL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMessageTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMessageTypeMessageTypeParserRuleCall_0_0 = (RuleCall)cMessageTypeAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPayloadAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPayloadPayloadParserRuleCall_2_0 = (RuleCall)cPayloadAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cTargetAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cTargetSenderLParserRuleCall_4_0_0 = (RuleCall)cTargetAssignment_4_0.eContents().get(0);
		private final Assignment cTargetAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cTargetReceiverLParserRuleCall_4_1_0 = (RuleCall)cTargetAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MessageL:
		//    messageType=MessageType '(' payload=Payload? ')' (target=SenderL | target=ReceiverL) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//messageType=MessageType '(' payload=Payload? ')' (target=SenderL | target=ReceiverL) ';'
		public Group getGroup() { return cGroup; }
		
		//messageType=MessageType
		public Assignment getMessageTypeAssignment_0() { return cMessageTypeAssignment_0; }
		
		//MessageType
		public RuleCall getMessageTypeMessageTypeParserRuleCall_0_0() { return cMessageTypeMessageTypeParserRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//payload=Payload?
		public Assignment getPayloadAssignment_2() { return cPayloadAssignment_2; }
		
		//Payload
		public RuleCall getPayloadPayloadParserRuleCall_2_0() { return cPayloadPayloadParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//(target=SenderL | target=ReceiverL)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//target=SenderL
		public Assignment getTargetAssignment_4_0() { return cTargetAssignment_4_0; }
		
		//SenderL
		public RuleCall getTargetSenderLParserRuleCall_4_0_0() { return cTargetSenderLParserRuleCall_4_0_0; }
		
		//target=ReceiverL
		public Assignment getTargetAssignment_4_1() { return cTargetAssignment_4_1; }
		
		//ReceiverL
		public RuleCall getTargetReceiverLParserRuleCall_4_1_0() { return cTargetReceiverLParserRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class SenderLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.SenderL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFromKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSenderAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSenderRoleLCrossReference_1_0 = (CrossReference)cSenderAssignment_1.eContents().get(0);
		private final RuleCall cSenderRoleLROLENAMETerminalRuleCall_1_0_1 = (RuleCall)cSenderRoleLCrossReference_1_0.eContents().get(1);
		
		//SenderL:
		//    'from' sender=[RoleL | ROLENAME]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'from' sender=[RoleL | ROLENAME]
		public Group getGroup() { return cGroup; }
		
		//'from'
		public Keyword getFromKeyword_0() { return cFromKeyword_0; }
		
		//sender=[RoleL | ROLENAME]
		public Assignment getSenderAssignment_1() { return cSenderAssignment_1; }
		
		//[RoleL | ROLENAME]
		public CrossReference getSenderRoleLCrossReference_1_0() { return cSenderRoleLCrossReference_1_0; }
		
		//ROLENAME
		public RuleCall getSenderRoleLROLENAMETerminalRuleCall_1_0_1() { return cSenderRoleLROLENAMETerminalRuleCall_1_0_1; }
	}
	public class ReceiverLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.ReceiverL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cToKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cToAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cToRoleLCrossReference_1_0 = (CrossReference)cToAssignment_1.eContents().get(0);
		private final RuleCall cToRoleLROLENAMETerminalRuleCall_1_0_1 = (RuleCall)cToRoleLCrossReference_1_0.eContents().get(1);
		
		//ReceiverL:
		//    'to' to=[RoleL | ROLENAME]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'to' to=[RoleL | ROLENAME]
		public Group getGroup() { return cGroup; }
		
		//'to'
		public Keyword getToKeyword_0() { return cToKeyword_0; }
		
		//to=[RoleL | ROLENAME]
		public Assignment getToAssignment_1() { return cToAssignment_1; }
		
		//[RoleL | ROLENAME]
		public CrossReference getToRoleLCrossReference_1_0() { return cToRoleLCrossReference_1_0; }
		
		//ROLENAME
		public RuleCall getToRoleLROLENAMETerminalRuleCall_1_0_1() { return cToRoleLROLENAMETerminalRuleCall_1_0_1; }
	}
	public class ChoiceLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.ChoiceL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRoleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRoleRoleLCrossReference_2_0 = (CrossReference)cRoleAssignment_2.eContents().get(0);
		private final RuleCall cRoleRoleLROLENAMETerminalRuleCall_2_0_1 = (RuleCall)cRoleRoleLCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMessageAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMessageMessageLParserRuleCall_4_0 = (RuleCall)cMessageAssignment_4.eContents().get(0);
		private final Assignment cBranchesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBranchesProtocolLParserRuleCall_5_0 = (RuleCall)cBranchesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cOrKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cMessageAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMessageMessageLParserRuleCall_7_2_0 = (RuleCall)cMessageAssignment_7_2.eContents().get(0);
		private final Assignment cBranchesAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cBranchesProtocolLParserRuleCall_7_3_0 = (RuleCall)cBranchesAssignment_7_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		
		//ChoiceL:
		//    'choice' 'at' role=[RoleL | ROLENAME] '{'
		//        message+=MessageL
		//        branches+=ProtocolL
		//    '}' ('or' '{'
		//        message+=MessageL
		//        branches+=ProtocolL
		//    '}')*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'choice' 'at' role=[RoleL | ROLENAME] '{'
		//    message+=MessageL
		//    branches+=ProtocolL
		//'}' ('or' '{'
		//    message+=MessageL
		//    branches+=ProtocolL
		//'}')*
		public Group getGroup() { return cGroup; }
		
		//'choice'
		public Keyword getChoiceKeyword_0() { return cChoiceKeyword_0; }
		
		//'at'
		public Keyword getAtKeyword_1() { return cAtKeyword_1; }
		
		//role=[RoleL | ROLENAME]
		public Assignment getRoleAssignment_2() { return cRoleAssignment_2; }
		
		//[RoleL | ROLENAME]
		public CrossReference getRoleRoleLCrossReference_2_0() { return cRoleRoleLCrossReference_2_0; }
		
		//ROLENAME
		public RuleCall getRoleRoleLROLENAMETerminalRuleCall_2_0_1() { return cRoleRoleLROLENAMETerminalRuleCall_2_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//message+=MessageL
		public Assignment getMessageAssignment_4() { return cMessageAssignment_4; }
		
		//MessageL
		public RuleCall getMessageMessageLParserRuleCall_4_0() { return cMessageMessageLParserRuleCall_4_0; }
		
		//branches+=ProtocolL
		public Assignment getBranchesAssignment_5() { return cBranchesAssignment_5; }
		
		//ProtocolL
		public RuleCall getBranchesProtocolLParserRuleCall_5_0() { return cBranchesProtocolLParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//('or' '{'
		//       message+=MessageL
		//       branches+=ProtocolL
		//   '}')*
		public Group getGroup_7() { return cGroup_7; }
		
		//'or'
		public Keyword getOrKeyword_7_0() { return cOrKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//message+=MessageL
		public Assignment getMessageAssignment_7_2() { return cMessageAssignment_7_2; }
		
		//MessageL
		public RuleCall getMessageMessageLParserRuleCall_7_2_0() { return cMessageMessageLParserRuleCall_7_2_0; }
		
		//branches+=ProtocolL
		public Assignment getBranchesAssignment_7_3() { return cBranchesAssignment_7_3; }
		
		//ProtocolL
		public RuleCall getBranchesProtocolLParserRuleCall_7_3_0() { return cBranchesProtocolLParserRuleCall_7_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
	}
	public class ForEachLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.ForEachL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForeachKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEachRoleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEachRoleRoleOneLParserRuleCall_1_0 = (RuleCall)cEachRoleAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRoleRoleSetLCrossReference_3_0 = (CrossReference)cRoleAssignment_3.eContents().get(0);
		private final RuleCall cRoleRoleSetLROLESETNAMETerminalRuleCall_3_0_1 = (RuleCall)cRoleRoleSetLCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBranchAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBranchProtocolLParserRuleCall_5_0 = (RuleCall)cBranchAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ForEachL:
		//    'foreach' eachRole=RoleOneL ':' role=[RoleSetL | ROLESETNAME] '{'
		//        branch=ProtocolL
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'foreach' eachRole=RoleOneL ':' role=[RoleSetL | ROLESETNAME] '{'
		//    branch=ProtocolL
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'foreach'
		public Keyword getForeachKeyword_0() { return cForeachKeyword_0; }
		
		//eachRole=RoleOneL
		public Assignment getEachRoleAssignment_1() { return cEachRoleAssignment_1; }
		
		//RoleOneL
		public RuleCall getEachRoleRoleOneLParserRuleCall_1_0() { return cEachRoleRoleOneLParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//role=[RoleSetL | ROLESETNAME]
		public Assignment getRoleAssignment_3() { return cRoleAssignment_3; }
		
		//[RoleSetL | ROLESETNAME]
		public CrossReference getRoleRoleSetLCrossReference_3_0() { return cRoleRoleSetLCrossReference_3_0; }
		
		//ROLESETNAME
		public RuleCall getRoleRoleSetLROLESETNAMETerminalRuleCall_3_0_1() { return cRoleRoleSetLROLESETNAMETerminalRuleCall_3_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//branch=ProtocolL
		public Assignment getBranchAssignment_5() { return cBranchAssignment_5; }
		
		//ProtocolL
		public RuleCall getBranchProtocolLParserRuleCall_5_0() { return cBranchProtocolLParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MessageTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.MessageType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cREQUESTKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cINFORMKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAGREEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cREFUSEKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cCFPKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cQUITKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//MessageType:
		//    'REQUEST' | 'INFORM' | 'AGREE' | 'REFUSE' | 'CFP' | 'QUIT'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'REQUEST' | 'INFORM' | 'AGREE' | 'REFUSE' | 'CFP' | 'QUIT'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'REQUEST'
		public Keyword getREQUESTKeyword_0() { return cREQUESTKeyword_0; }
		
		//'INFORM'
		public Keyword getINFORMKeyword_1() { return cINFORMKeyword_1; }
		
		//'AGREE'
		public Keyword getAGREEKeyword_2() { return cAGREEKeyword_2; }
		
		//'REFUSE'
		public Keyword getREFUSEKeyword_3() { return cREFUSEKeyword_3; }
		
		//'CFP'
		public Keyword getCFPKeyword_4() { return cCFPKeyword_4; }
		
		//'QUIT'
		public Keyword getQUITKeyword_5() { return cQUITKeyword_5; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cIntKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cStringKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cActionKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//Type:
		//    'int' | 'string' | 'action'  //add more
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'int' | 'string' | 'action'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'int'
		public Keyword getIntKeyword_0() { return cIntKeyword_0; }
		
		//'string'
		public Keyword getStringKeyword_1() { return cStringKeyword_1; }
		
		//'action'
		public Keyword getActionKeyword_2() { return cActionKeyword_2; }
	}
	
	
	private final ModelElements pModel;
	private final GlobalProtocolElements pGlobalProtocol;
	private final RolesElements pRoles;
	private final RoleElements pRole;
	private final RoleOneElements pRoleOne;
	private final RoleSetElements pRoleSet;
	private final ProtocolElements pProtocol;
	private final RecursionElements pRecursion;
	private final CloseRecursionElements pCloseRecursion;
	private final ForEachElements pForEach;
	private final ChoiceElements pChoice;
	private final MessageElements pMessage;
	private final PayloadElements pPayload;
	private final LocalProtocolElements pLocalProtocol;
	private final RolesLElements pRolesL;
	private final RoleLElements pRoleL;
	private final RoleOneLElements pRoleOneL;
	private final RoleSetLElements pRoleSetL;
	private final ProtocolLElements pProtocolL;
	private final MessageLElements pMessageL;
	private final SenderLElements pSenderL;
	private final ReceiverLElements pReceiverL;
	private final ChoiceLElements pChoiceL;
	private final ForEachLElements pForEachL;
	private final MessageTypeElements pMessageType;
	private final TypeElements pType;
	private final TerminalRule tROLENAME;
	private final TerminalRule tROLESETNAME;
	private final TerminalRule tRECNAME;
	private final TerminalRule tPROTOCOLNAME;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pGlobalProtocol = new GlobalProtocolElements();
		this.pRoles = new RolesElements();
		this.pRole = new RoleElements();
		this.pRoleOne = new RoleOneElements();
		this.pRoleSet = new RoleSetElements();
		this.pProtocol = new ProtocolElements();
		this.pRecursion = new RecursionElements();
		this.pCloseRecursion = new CloseRecursionElements();
		this.pForEach = new ForEachElements();
		this.pChoice = new ChoiceElements();
		this.pMessage = new MessageElements();
		this.pPayload = new PayloadElements();
		this.pLocalProtocol = new LocalProtocolElements();
		this.pRolesL = new RolesLElements();
		this.pRoleL = new RoleLElements();
		this.pRoleOneL = new RoleOneLElements();
		this.pRoleSetL = new RoleSetLElements();
		this.pProtocolL = new ProtocolLElements();
		this.pMessageL = new MessageLElements();
		this.pSenderL = new SenderLElements();
		this.pReceiverL = new ReceiverLElements();
		this.pChoiceL = new ChoiceLElements();
		this.pForEachL = new ForEachLElements();
		this.pMessageType = new MessageTypeElements();
		this.pType = new TypeElements();
		this.tROLENAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.ROLENAME");
		this.tROLESETNAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.ROLESETNAME");
		this.tRECNAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.RECNAME");
		this.tPROTOCOLNAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.globalTypes.MyDsl.PROTOCOLNAME");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.globalTypes.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    protocol = GlobalProtocol | protocol = LocalProtocol
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//GlobalProtocol:
	//    'global' 'protocol' protocolName=PROTOCOLNAME '(' roles=Roles '){'protocol=Protocol'}'
	//    ;
	public GlobalProtocolElements getGlobalProtocolAccess() {
		return pGlobalProtocol;
	}
	
	public ParserRule getGlobalProtocolRule() {
		return getGlobalProtocolAccess().getRule();
	}
	
	//Roles:
	//    roles+=Role (',' roles+=Role)*
	//;
	public RolesElements getRolesAccess() {
		return pRoles;
	}
	
	public ParserRule getRolesRule() {
		return getRolesAccess().getRule();
	}
	
	//Role:
	//    RoleOne | RoleSet
	//;
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}
	
	//RoleOne:
	//    'role' name=ROLENAME
	//;
	public RoleOneElements getRoleOneAccess() {
		return pRoleOne;
	}
	
	public ParserRule getRoleOneRule() {
		return getRoleOneAccess().getRule();
	}
	
	//RoleSet:
	//    'roleset' name=ROLESETNAME ':' ref=[RoleOne | ROLENAME]
	//;
	public RoleSetElements getRoleSetAccess() {
		return pRoleSet;
	}
	
	public ParserRule getRoleSetRule() {
		return getRoleSetAccess().getRule();
	}
	
	//Protocol:
	//    {Protocol} (actions+=(Message | Choice | Recursion | ForEach | CloseRecursion))*
	//;
	public ProtocolElements getProtocolAccess() {
		return pProtocol;
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//Recursion:
	//    'rec' name=RECNAME ':'
	//;
	public RecursionElements getRecursionAccess() {
		return pRecursion;
	}
	
	public ParserRule getRecursionRule() {
		return getRecursionAccess().getRule();
	}
	
	//CloseRecursion:
	//    'loop' recursionVariable=[Recursion | RECNAME] ';'
	//;
	public CloseRecursionElements getCloseRecursionAccess() {
		return pCloseRecursion;
	}
	
	public ParserRule getCloseRecursionRule() {
		return getCloseRecursionAccess().getRule();
	}
	
	//ForEach: // add ref
	//    'foreach' eachRole=RoleOne ':' role=[RoleSet | ROLESETNAME] '{'
	//        branch=Protocol
	//    '}'
	//;
	public ForEachElements getForEachAccess() {
		return pForEach;
	}
	
	public ParserRule getForEachRule() {
		return getForEachAccess().getRule();
	}
	
	//Choice:
	//    'choice' 'at' role=[RoleOne | ROLENAME] '{'
	//        message+=Message
	//        branches+=Protocol
	//    '}' ('or' '{'
	//        message+=Message
	//        branches+=Protocol
	//    '}')*
	//;
	public ChoiceElements getChoiceAccess() {
		return pChoice;
	}
	
	public ParserRule getChoiceRule() {
		return getChoiceAccess().getRule();
	}
	
	//Message:
	//    messageType=MessageType '(' payload=Payload? ')' 'from' sender=[RoleOne | ROLENAME] 'to' receiver=[RoleOne | ROLENAME] ';'
	//;
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//Payload:
	//    {Payload} (types+=Type (','types+=Type)*) | types+=ID
	//;
	public PayloadElements getPayloadAccess() {
		return pPayload;
	}
	
	public ParserRule getPayloadRule() {
		return getPayloadAccess().getRule();
	}
	
	//LocalProtocol:
	//    'local' 'protocol' protocolName=PROTOCOLNAME 'projection' 'on' (projectedRole=ROLENAME | projectedRole=ROLESETNAME) '(' roles=RolesL ')' '{'protocol=ProtocolL'}'
	//;
	public LocalProtocolElements getLocalProtocolAccess() {
		return pLocalProtocol;
	}
	
	public ParserRule getLocalProtocolRule() {
		return getLocalProtocolAccess().getRule();
	}
	
	//RolesL:
	//    roles+=RoleL (',' roles+=RoleL)*
	//;
	public RolesLElements getRolesLAccess() {
		return pRolesL;
	}
	
	public ParserRule getRolesLRule() {
		return getRolesLAccess().getRule();
	}
	
	//RoleL:
	//    RoleOneL | RoleSetL
	//;
	public RoleLElements getRoleLAccess() {
		return pRoleL;
	}
	
	public ParserRule getRoleLRule() {
		return getRoleLAccess().getRule();
	}
	
	//RoleOneL:
	//    'role' name=ROLENAME
	//;
	public RoleOneLElements getRoleOneLAccess() {
		return pRoleOneL;
	}
	
	public ParserRule getRoleOneLRule() {
		return getRoleOneLAccess().getRule();
	}
	
	//RoleSetL:
	//    'roleset' name=ROLESETNAME ':' ref=[RoleOneL | ROLENAME]
	//;
	public RoleSetLElements getRoleSetLAccess() {
		return pRoleSetL;
	}
	
	public ParserRule getRoleSetLRule() {
		return getRoleSetLAccess().getRule();
	}
	
	//ProtocolL:
	//    {ProtocolL} (actions+=(MessageL | Message | ChoiceL | ForEachL | Recursion | CloseRecursion))*
	//;
	public ProtocolLElements getProtocolLAccess() {
		return pProtocolL;
	}
	
	public ParserRule getProtocolLRule() {
		return getProtocolLAccess().getRule();
	}
	
	//MessageL:
	//    messageType=MessageType '(' payload=Payload? ')' (target=SenderL | target=ReceiverL) ';'
	//;
	public MessageLElements getMessageLAccess() {
		return pMessageL;
	}
	
	public ParserRule getMessageLRule() {
		return getMessageLAccess().getRule();
	}
	
	//SenderL:
	//    'from' sender=[RoleL | ROLENAME]
	//;
	public SenderLElements getSenderLAccess() {
		return pSenderL;
	}
	
	public ParserRule getSenderLRule() {
		return getSenderLAccess().getRule();
	}
	
	//ReceiverL:
	//    'to' to=[RoleL | ROLENAME]
	//;
	public ReceiverLElements getReceiverLAccess() {
		return pReceiverL;
	}
	
	public ParserRule getReceiverLRule() {
		return getReceiverLAccess().getRule();
	}
	
	//ChoiceL:
	//    'choice' 'at' role=[RoleL | ROLENAME] '{'
	//        message+=MessageL
	//        branches+=ProtocolL
	//    '}' ('or' '{'
	//        message+=MessageL
	//        branches+=ProtocolL
	//    '}')*
	//;
	public ChoiceLElements getChoiceLAccess() {
		return pChoiceL;
	}
	
	public ParserRule getChoiceLRule() {
		return getChoiceLAccess().getRule();
	}
	
	//ForEachL:
	//    'foreach' eachRole=RoleOneL ':' role=[RoleSetL | ROLESETNAME] '{'
	//        branch=ProtocolL
	//    '}'
	//;
	public ForEachLElements getForEachLAccess() {
		return pForEachL;
	}
	
	public ParserRule getForEachLRule() {
		return getForEachLAccess().getRule();
	}
	
	//MessageType:
	//    'REQUEST' | 'INFORM' | 'AGREE' | 'REFUSE' | 'CFP' | 'QUIT'
	//;
	public MessageTypeElements getMessageTypeAccess() {
		return pMessageType;
	}
	
	public ParserRule getMessageTypeRule() {
		return getMessageTypeAccess().getRule();
	}
	
	//Type:
	//    'int' | 'string' | 'action'  //add more
	//;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//terminal ROLENAME:('a'..'z')*;
	public TerminalRule getROLENAMERule() {
		return tROLENAME;
	}
	
	//terminal ROLESETNAME:('A'..'Z') ('a'..'z')*;
	public TerminalRule getROLESETNAMERule() {
		return tROLESETNAME;
	}
	
	//terminal RECNAME:('A'..'Z')+;
	public TerminalRule getRECNAMERule() {
		return tRECNAME;
	}
	
	//terminal PROTOCOLNAME: '_'('a'..'z')*;
	public TerminalRule getPROTOCOLNAMERule() {
		return tPROTOCOLNAME;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
