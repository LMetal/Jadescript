/**
 * generated by Xtext 2.34.0
 */
package org.xtext.globalTypes.generator;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.xtext.globalTypes.myDsl.GlobalProtocol;
import org.xtext.globalTypes.myDsl.LocalProtocol;
import org.xtext.globalTypes.myDsl.Model;
import org.xtext.globalTypes.myDsl.Role;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  private LocalGenerator locGen = new LocalGenerator();

  private JadescriptGenerator jadeGen = new JadescriptGenerator();

  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    Model model = ((Model) _head);
    EObject _protocol = model.getProtocol();
    if ((_protocol instanceof GlobalProtocol)) {
      EObject _protocol_1 = model.getProtocol();
      GlobalProtocol globalProtocol = ((GlobalProtocol) _protocol_1);
      EList<Role> _roles = globalProtocol.getRoles().getRoles();
      for (final Role r : _roles) {
        {
          String _name = r.getName();
          String _plus = ("LOCAL in " + _name);
          System.out.println(_plus);
          String _name_1 = r.getName();
          String _plus_1 = ("local/local_" + _name_1);
          String _plus_2 = (_plus_1 + ".jglobal");
          fsa.generateFile(_plus_2, this.locGen.project(globalProtocol, model.getDefinitions(), r));
          String _name_2 = r.getName();
          String _plus_3 = ("END LOCAL on " + _name_2);
          System.out.println(_plus_3);
        }
      }
    } else {
      EObject _protocol_2 = model.getProtocol();
      LocalProtocol localProtocol = ((LocalProtocol) _protocol_2);
      System.out.println("JADE");
      Role _projectedRole = localProtocol.getProjectedRole();
      String _plus = ("jade/jade_" + _projectedRole);
      String _plus_1 = (_plus + ".jade");
      fsa.generateFile(_plus_1, this.jadeGen.translate(localProtocol, model.getDefinitions()));
    }
  }
}
