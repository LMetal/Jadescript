/*
 * generated by Xtext 2.34.0
 */
package org.xtext.globalTypes.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.globalTypes.myDsl.Model
import org.xtext.globalTypes.myDsl.Role
import org.xtext.globalTypes.myDsl.GlobalProtocol
import org.xtext.globalTypes.myDsl.LocalProtocol


/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {
	LocalGenerator locGen = new LocalGenerator;
	JadescriptGenerator jadeGen = new JadescriptGenerator;
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		var model = resource.contents.head as Model;
		//create projection file(local protocol) for each role
		if(model.getProtocol() instanceof GlobalProtocol){
			var globalProtocol = model.protocol as GlobalProtocol
			for(Role r : globalProtocol.getRoles().getRoles()){
				System.out.println("LOCAL in " + r.getName());
				fsa.generateFile('../src/local/local_'+r.getName()+'.jglobal', locGen.project(globalProtocol, model.getDefinitions, r))
				System.out.println("END LOCAL on " + r.getName());		
			}
		} else {
			var localProtocol = model.protocol as LocalProtocol
			System.out.println("JADE");
			fsa.generateFile('jade/jade'+localProtocol.projectedRole+'.jade', jadeGen.project(localProtocol, model.getDefinitions))
		}
		
		
	}
	
	
}